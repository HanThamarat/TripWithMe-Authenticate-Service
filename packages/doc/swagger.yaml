basePath: /api
definitions:
  core.Auth:
    description: Auth information Contains username and password
    properties:
      email:
        description: |-
          User's unique username
          @example administrator
        type: string
      password:
        description: |-
          User's password
          @example 123456
        type: string
    type: object
  core.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      updated_at:
        type: string
    type: object
  response.Response:
    properties:
      body: {}
      message:
        type: string
      status:
        type: integer
    type: object
host: localhost:3000
info:
  contact:
    email: technexify@outlook.com
    name: Developer Team
    url: https://technexify.site
  description: User management & Authentication | Doc by Swagger.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: User management & Authentication
  version: "1.0"
paths:
  /auth:
    post:
      consumes:
      - application/json
      description: Authenticate a user with the provided credentials
      parameters:
      - description: Authentication credentials
        in: body
        name: auth
        required: true
        schema:
          $ref: '#/definitions/core.Auth'
      produces:
      - application/json
      responses:
        "200":
          description: Authenticated successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/core.Auth'
              type: object
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/response.Response'
      summary: Authenticate a user
      tags:
      - Auth
  /user:
    post:
      consumes:
      - application/json
      description: Create a new user with the provided information
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/core.User'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/core.User'
              type: object
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: Create a new user
      tags:
      - User
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    description: Use "Bearer <API_KEY>"
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
